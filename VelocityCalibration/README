Aim
---
This module is dedicated for measurements with collimator in different positions along z axis to estimate effective velocity of signal inside scintillators.

Expected output
---------------
No output to stdout.
JPet.log file appears with the log of the processing and ROOT files with the following etensions are produced:
 *.tslot.raw.root
 *.raw.sig.root
 *.phys.sig.root
 *.hit.root
 *.deltaT.root
where "*" stands for the name of the input file

results file

Input Data
-----------
For this example, user must provide their own data file(s) collected with the big barrel with collimator placed along different position along z axis.

Description
--------------
The analysis is split into tasks.

This module is looking for time difference between A and B side for each scintillator. A Gaussian function is fitted to each time difference AB (algorithm is looking for maximum bin and Gaussian function is fitted in range maximum bin +/- 2 bins). Control histograms are saved to automatically created folder Results. A txt file with fit results is also created. Slot_id, position, threshold, mean value of fitted function, error of fitted function, chi_square and NDF are saved to results file.

One can write in userParams.json the position and corresponding to this position file which will be analysed by framework. DeltaTFinder module compares name of file given from command line with name of file in userParams.json and based on this comparison DeltaTFinder saves a proper position to results file. There is no need to write magic numbers inside code of DeltaTFinder.

userParams option:

 "localDB":"setupRun2NoRef.json" - local database
 "TimeCalibLoader_ConfigFile":"TimeConstantsCollimator.txt" - this is not used because this module does not use the second task
 "DeltaTFinder_numberOfPositions" : "2" - number of position you want to specify 
 "DeltaTFinder_Position1":"0 /home/monika/Analysis/run_4/collimator/dane/collimator_scan/position_0/dabc_17207043432.hits.root" - exemplary position and path to one file (the same path must be provided while program running)
 "DeltaTFinder_Position2":"50 /home/monika/Analysis/run_4/collimator/dane/collimator_scan/position_50/dabc_17207020324.hits.root" - exemplary position and path to second file (the same path must be provided while program running)
 "DeltaTFinder_outputPath":"" - path to folder in which control spectra will be saved, for empty path the folder with control spectra with be created in the same folder as program
 "DeltaTFinder_velocityCalibFile":"results.txt" - file name with results which will be created at the end

Another, separate program (estimateVelocity.cpp) has been written to estimate effective velocity of signal inside scintillator based on file results.txt. This program draws dependence between position and mean value of Gaussian function for a given scintillator. Later a polynomial (pol1) function is fitted to this points and p1 parameter of this function is treated as a effective velocity of signal. 

Additional info
--------------
To run VelocityCalibration module properly one has to create velocity calibration file with 0 value as the effective velocity of light inside scintillator which is used by HitFinder. This file is read in HitFinder and it was not possible to turn off loading of previous effective velocity calibration.


Compiling 
------------
make

Running
------------
The script run.sh contains an example of running the analysis for two files one after another. Note, however, that
the user must fill the input data file name and the number of run as well as take care when setting calibration of times and velocity (see additional info section above).

Author
------------
Monika Pawlik-Nied≈∫wiecka
Please report any bugs and suggestions of corrections to: <monikapawlik88@gmail.com>
